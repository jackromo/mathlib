This is a simple parser designed to parse simple mathematical calculations, 1 line long, of arbitary length.

The parser can:

-Add, multiply, divide, subtract and perform modulus (no precendence)

-Recognize parentheses

-Perform exponents (4e2 and 4^2)

-Perform predefined functions (sin, cos, tan, atan, sinh, exp, ln, sqrt)

-Store user-defined and predefined (pi, e) variables

-Accept and perform user-defined functions (can be put inside one another and used as operands) (arbitrary number of arguments)
	-eg. f(x): x-1
	-f(9)
	-This will give the result '8'.
	-g(a, b): f(a) + f(b)
	-g(8, 7)
	-This will give the result '11'.
	-Note: The number of arguments given when calling the function must be the same as the amount of arguments in the function definition.

-Remember last given answer in special variable 'ans'

-Understand '>', '<', '>=', '<=', '==', '!=', '&&', and '||' (no precedence; '0==0 || 4==0' won't work, must be '(0==0) || (4==0)')

-Perform if-then-else statements
	-eg. if 8>2 then {5} else {0}
	-This will give the result '5'.
	-eg. factorial(x):if x==1 then {1} else {x*factorial(x-1)}
	-This function will, inherently, perform factorials.
	-The 'else' statement is optional, yet the brackets are obligatory.
